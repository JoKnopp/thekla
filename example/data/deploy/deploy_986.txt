Here 's how A/B testing works : you are doing continuous , small deployments so each piece of functionality is relatively easy to understand in terms of its implication to the users. When you deploy this small functionality change ( the " A " functionality ) , you deploy it to a sub-set of the users and compare to the users who are still using the old functionality ( the " B " functionality ) . Think of it like a small , rapid beta test. This can have huge , beneficial implications for software , think of what would happen if you deployed a new " Buy Now " button to a website but accidentally colored the button the same as the page background. You now have , as Eric Ries says , " a hobby , not a business model. " Obviously , you would prefer to detect an issue such as this sooner , rater than later .